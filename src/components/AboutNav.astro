---
export interface Props {
  activeSub?: "about" | "library" | "playlists" | "workouts";
}

const { activeSub } = Astro.props;
---

<div class="sub-nav-container">
  <div class="sub-nav-wrap">
    <nav id="sub-nav">
      <button
        class="hamburger-menu focus-outline"
        aria-label="Open Menu"
        aria-expanded="false"
        aria-controls="sub-menu-items"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="1.5"
          stroke-linecap="round"
          stroke-linejoin="round"
          class="menu-icon"
        >
          <line x1="7" y1="12" x2="21" y2="12" class="line"></line>
          <line x1="3" y1="6" x2="21" y2="6" class="line"></line>
          <line x1="12" y1="18" x2="21" y2="18" class="line"></line>
          <line x1="18" y1="6" x2="6" y2="18" class="close"></line>
          <line x1="6" y1="6" x2="18" y2="18" class="close"></line>
        </svg>
      </button>
      <ul id="menu-items" class="display-none sm:flex">
        <li>
          <a href="/about" class={activeSub === "about" ? "active" : ""}>
            About
          </a>
        </li>
        <li>
          <a
            href="/about/library"
            class={activeSub === "library" ? "active" : ""}
          >
            Library
          </a>
        </li>
        <li>
          <a
            href="/about/playlists"
            class={activeSub === "playlists" ? "active" : ""}
          >
            Playlists
          </a>
        </li>
        <li>
          <a
            href="/about/workouts"
            class={activeSub === "workouts" ? "active" : ""}
          >
            Workouts
          </a>
        </li>
      </ul>
    </nav>
  </div>
</div>
<style>
  .sub-nav-container {
    @apply mx-auto mt-6 flex max-w-3xl flex-col items-center justify-start sm:flex-row;
  }
  .sub-nav-container{
    margin: 5px auto;
    padding: 20px;
    border: 2px solid;
    background: #ddd;
    box-shadow: 1px 1px, 2px 2px, 3px 3px, 4px 4px;
    display: flex;
    flex-wrap: wrap;
    justify-content: flex-start;
    align-content: flex-start;
  }
  .top-nav-wrap {
    @apply relative flex w-full items-start justify-between p-4 sm:items-center sm:py-8;
  }
  
  .logo {
    @apply absolute py-1 text-xl font-semibold sm:static sm:text-2xl;
  }
  .hamburger-menu {
    @apply self-end p-2 sm:hidden;
  }
  .hamburger-menu svg {
    @apply h-6 w-6 scale-125 fill-skin-base;
  }

  nav {
    @apply flex w-full flex-col items-center bg-skin-fill sm:ml-2 sm:flex-row sm:justify-end sm:space-x-4 sm:py-0;
  }
  nav ul {
    @apply mt-4 w-44 grid-cols-2 grid-rows-4 gap-x-2 gap-y-2 sm:ml-0 sm:mt-0 sm:w-auto sm:gap-x-5 sm:gap-y-0;
  }
  nav ul li {
    @apply col-span-2 flex items-center justify-center;
  }
  nav ul li a {
    @apply w-full px-4 py-3 text-center font-medium hover:text-skin-accent sm:my-0 sm:px-2 sm:py-1;
  }
  nav ul li:nth-child(4) a {
    @apply w-auto;
  }
  nav ul li:nth-child(4),
  nav ul li:nth-child(5) {
    @apply col-span-1;
  }
  nav a.active {
    @apply underline decoration-wavy decoration-2 underline-offset-4;
  }
  nav a.active svg {
    @apply fill-skin-accent;
  }

  nav button {
    @apply p-1;
  }
  nav button svg {
    @apply h-6 w-6 fill-skin-base hover:fill-skin-accent;
  }
  #theme-btn {
    @apply p-3 sm:p-1;
  }
  #theme-btn svg {
    @apply scale-125 hover:rotate-12 sm:scale-100;
  }

  .menu-icon line {
    @apply transition-opacity duration-75 ease-in-out;
  }
  .menu-icon .close {
    opacity: 0;
  }
  .menu-icon.is-active .line {
    @apply opacity-0;
  }
  .menu-icon.is-active .close {
    @apply opacity-100;
  }
  #sub-nav {
    /* margin-left: -40%; */
    background-color: #ddd;
  }
  #sub-nav ul {
    list-style: none;
  }
</style>
<script>
  // Toggle menu
  const menuBtn = document.querySelector(".hamburger-menu");
  const menuIcon = document.querySelector(".menu-icon");
  const menuItems = document.querySelector("#menu-items");

  menuBtn?.addEventListener("click", () => {
    const menuExpanded = menuBtn.getAttribute("aria-expanded") === "true";
    menuIcon?.classList.toggle("is-active");
    menuBtn.setAttribute("aria-expanded", menuExpanded ? "false" : "true");
    menuBtn.setAttribute(
      "aria-label",
      menuExpanded ? "Open Menu" : "Close Menu"
    );
    menuItems?.classList.toggle("display-none");
  });
</script>
